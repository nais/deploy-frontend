name: Build and deploy nais-deploy-frontend

on: 
  push:
    branches: 
      - master

  

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/deploy-frontend:${{ github.sha }}

jobs:
  build:
    name: Checkout code and setup node
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '13.12.x'
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-cache-
      - name: Download dependencies
        run: yarn install
      - name: Run tests
        run: yarn test
      - name: Build docker image
        run: docker build . --tag $IMAGE
      - name: Login to Github package registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "$GITHUB_TOKEN" | docker login docker.pkg.github.com -u "$GITHUB_REPOSITORY" --password-stdin
      - name: Push docker image
        run: docker push $IMAGE

  deploy-dev:
    name: Deploy to dev-gcp
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/naiserator.yml
          VARS: .nais/dev-config.json
          OWNER: navikt
          REPOSITORY: nais-deploy
  # deploy-prod:
  #   name: Deploy to prod-gcp
  #   needs: deploy-dev
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: nais/deploy/actions/deploy@v1
  #       env:
  #         APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  #         CLUSTER: prod-gcp
  #         RESOURCE: .nais/naiserator.yml
  #         VARS: .nais/prod-config.json
  #         OWNER: navikt
  #         REPOSITORY: nais-deploy
