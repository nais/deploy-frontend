name: Build and deploy nais-deploy-frontend

on: [push, pull_request]

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/deploy-frontend:${{ github.sha }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Download dependencies
        run: yarn install --frozen-lockfile
      - name: Run tests
        run: yarn test
      - name: Build
        run: yarn build

  build-image:
    name: Build and publish Docker
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        run: docker build . --tag $IMAGE
      - name: Login to Github package registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "$GITHUB_TOKEN" | docker login docker.pkg.github.com -u "$GITHUB_REPOSITORY" --password-stdin
      - name: Push docker image
        run: docker push $IMAGE

  deploy-dev:
    name: Deploy to dev-gcp
    needs: build-image
    runs-on: ubuntu-latest
    # soft-disable deployments to dev-gcp for now. just delete the following line to enable it again
    if: ${{ github.ref == 'refs/heads/dev-gcp' }} 

    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/naiserator.yml
          VARS: .nais/dev-config.json

  deploy-ci:
    name: Deploy to ci-gcp
    needs: build-image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY_CI }}
          CLUSTER: ci-gcp
          RESOURCE: .nais/naiserator.yml
          VARS: .nais/ci-config.json
          DEPLOY_SERVER: deploy.ci.nav.no:443

  deploy-prod:
    name: Deploy to prod-gcp
    needs: build-image
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/naiserator.yml
          VARS: .nais/prod-config.json
