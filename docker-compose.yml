version: "3"
services:
  deploy-frontend:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
    - "8081:8081"
    environment:
      GOOGLE_WELL_KNOWN_URL: "https://accounts.google.com/.well-known/openid-configuration"
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URL: "http://localhost:8081/oauth2/callback"
      GOOGLE_LOGOUT_REDIRECT_URL: "http://localhost:8081/logout"
      COOKIE_KEY: ${COOKIE_KEY}
      DOWNSTREAM_API_PRE_SHARED_KEY: ${DOWNSTREAM_API_PRE_SHARED_KEY}
      DOWNSTREAM_API_URL: "http://hookd:8080"
      AUTHENTICATION_ENABLED: "true"
      AUTHENTICATION_PROVIDER: "google"
  hookd-db:
    command: postgres -c log_statement=all
    image: postgres:11-alpine
    ports:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: hookd
    volumes:
      - hookd-data:/var/lib/postgresql/data
  hookd:
    build:
      context: ../deploy/
      dockerfile: ../deploy/Dockerfile
    command:
      - /app/hookd
    depends_on:
      - console
    environment:
      HOOKD_DATABASE_URL: "postgresql://postgres:root@hookd-db/hookd"
      HOOKD_LISTEN_ADDRESS: "0.0.0.0:8080"
      HOOKD_FRONTEND_KEYS: ${DOWNSTREAM_API_PRE_SHARED_KEY}
      HOOKD_CONSOLE_URL: "http://console:3000/query"
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
  console-db:
    image: postgres:14-alpine
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "5432"
    environment:
      POSTGRES_USER: console
      POSTGRES_PASSWORD: console
      POSTGRES_DB: console
    volumes:
      - console-data:/var/lib/postgresql/data
  console:
    build:
      context: ../console/
      dockerfile: ../console/Dockerfile
    environment:
      CONSOLE_DATABASE_URL: "postgresql://console:console@console-db/console"
      CONSOLE_LISTEN_ADDRESS: "0.0.0.0:3000"
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}

  adminer:
    depends_on:
      - hookd-db
      - console-db
    image: adminer:latest
    restart: always
    ports:
      - "8000:8080"
    environment:
      ADMINER_DEFAULT_SERVER: hookd-db

volumes:
  console-data:
  hookd-data:
